[{"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\Portal.js":"1","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\index.js":"2","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\CreateAvatar.js":"3","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\ProfilePhoto.js":"4","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\firebase\\firebase.js":"5"},{"size":607,"mtime":1605514531514,"results":"6","hashOfConfig":"7"},{"size":1116,"mtime":1606986143587,"results":"8","hashOfConfig":"7"},{"size":3107,"mtime":1606986723198,"results":"9","hashOfConfig":"7"},{"size":2309,"mtime":1606986779032,"results":"10","hashOfConfig":"7"},{"size":663,"mtime":1606829245643,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"pkwoak",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\Portal.js",["23"],"import { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Portal = ({ portalDiv, children }) => {\n  const [portal] = useState(document.createElement(\"div\"));\n  const portalRoot = document.getElementById(portalDiv);\n  useEffect(() => {\n    portalRoot.appendChild(portal);\n    return () => {\n      portalRoot.removeChild(portal);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, portal);\n};\n\nPortal.propTypes = {\n  portalDiv: PropTypes.string.isRequired,\n  children: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Portal;\n","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\index.js",["24"],"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\CreateAvatar.js",["25","26","27","28"],"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\ProfilePhoto.js",["29","30","31"],"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\firebase\\firebase.js",[],{"ruleId":"32","severity":1,"message":"33","line":13,"column":6,"nodeType":"34","endLine":13,"endColumn":8,"suggestions":"35"},{"ruleId":"36","severity":1,"message":"37","line":13,"column":9,"nodeType":"38","messageId":"39","endLine":13,"endColumn":11},{"ruleId":"36","severity":1,"message":"40","line":1,"column":10,"nodeType":"38","messageId":"39","endLine":1,"endColumn":15},{"ruleId":"36","severity":1,"message":"41","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":20},{"ruleId":"36","severity":1,"message":"42","line":10,"column":17,"nodeType":"38","messageId":"39","endLine":10,"endColumn":25},{"ruleId":"36","severity":1,"message":"43","line":34,"column":11,"nodeType":"38","messageId":"39","endLine":34,"endColumn":16},{"ruleId":"36","severity":1,"message":"44","line":8,"column":10,"nodeType":"38","messageId":"39","endLine":8,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":13,"column":31,"nodeType":"47","messageId":"48","endLine":13,"endColumn":33},{"ruleId":"32","severity":1,"message":"49","line":19,"column":22,"nodeType":"38","endLine":19,"endColumn":26},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'portal' and 'portalRoot'. Either include them or remove the dependency array.","ArrayExpression",["50"],"no-unused-vars","'db' is assigned a value but never used.","Identifier","unusedVar","'parse' is defined but never used.","'ProfilePhoto' is defined but never used.","'setImage' is assigned a value but never used.","'image' is assigned a value but never used.","'blobKey' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Assignments to the 'imageSrc' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.",{"desc":"51","fix":"52"},"Update the dependencies array to be: [portal, portalRoot]",{"range":"53","text":"54"},[404,406],"[portal, portalRoot]"]