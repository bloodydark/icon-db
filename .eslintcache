[{"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\Portal.js":"1","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\index.js":"2","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\CreateAvatar.js":"3","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\ProfilePhoto.js":"4","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\firebase\\firebase.js":"5"},{"size":607,"mtime":1605514531514,"results":"6","hashOfConfig":"7"},{"size":2166,"mtime":1606911209039,"results":"8","hashOfConfig":"7"},{"size":3683,"mtime":1606897664363,"results":"9","hashOfConfig":"7"},{"size":1448,"mtime":1606911637059,"results":"10","hashOfConfig":"7"},{"size":663,"mtime":1606829245643,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"pkwoak",{"filePath":"15","messages":"16","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\Portal.js",["25"],"import { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Portal = ({ portalDiv, children }) => {\n  const [portal] = useState(document.createElement(\"div\"));\n  const portalRoot = document.getElementById(portalDiv);\n  useEffect(() => {\n    portalRoot.appendChild(portal);\n    return () => {\n      portalRoot.removeChild(portal);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, portal);\n};\n\nPortal.propTypes = {\n  portalDiv: PropTypes.string.isRequired,\n  children: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Portal;\n","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\index.js",["26","27","28","29"],"import React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.css\";\nimport ProfilePhoto from \"./components/ProfilePhoto\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport CreateAvatar from \"./components/CreateAvatar\";\nimport Portal from \"./components/Portal\";\nimport firebase from \"./firebase/firebase\";\n\nconst App = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const [getBlob, setGetBlob] = useState(\"\");\n  const db = firebase.firestore().collection(\"test\");\n\n  const getData = (isOpened, imageSrc) => {\n    setIsOpen(isOpened);\n    setImageSrc(imageSrc);\n  };\n\n  useEffect(() => {\n    db.limit(1).onSnapshot((snapshot) => {\n      snapshot.docs.map((doc) => {\n        const item = doc.data();\n        const blob = item.img;\n        if (!imageSrc) {\n          // <img src={\"\"} />\n          setImageSrc(blob);\n          console.log(blob);\n        }\n      });\n    });\n  }, []);\n\n  //   console.log(\"Empty\");\n  //   db.onSnapshot((snapshot) => {\n  //     snapshot.docs.map((doc) => {\n  //       const display = doc.data();\n  //       setGetBlob(display);\n  //     });\n  //   });\n  // }\n\n  // useEffect(() => {\n  //   db.onSnapshot((snapshot) => {\n  //     snapshot.docs.map((doc) => {\n  //       const display = doc.data();\n  //       // return display;\n  //     });\n  //   });\n  // }, []);\n  // console.log(getBlob);\n  // const display = db.where(\"img\", \"==\", \"true\").get();\n  // console.log(display);\n\n  // if (imageSrc) {\n  //   console.log(\"Exist\");\n  // } else {\n  //   setImageSrc()\n  //   console.log(\"Empty\");\n  // }\n\n  return (\n    <React.Fragment>\n      <ProfilePhoto getData={getData} imageSrc={imageSrc} />\n      <div id=\"createAvatarDiv\" />\n      {isOpen && !imageSrc && (\n        <Portal portalDiv=\"createAvatarDiv\">\n          <div className=\"createAvatarDiv_content m-auto\">\n            <CreateAvatar getData={getData} />\n          </div>\n        </Portal>\n      )}\n      <br />\n      {/* <img src={\"\"} /> */}\n    </React.Fragment>\n  );\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\CreateAvatar.js",["30","31","32","33","34","35"],"import { parse } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport Avatar from \"react-avatar-edit\";\r\nimport AvatarEditor from \"react-avatar-editor\";\r\nimport firebase from \"../firebase/firebase\";\r\n\r\nconst CreateAvatar = ({ getData }) => {\r\n  const [preview, setPreview] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [userImage, setUserImage] = useState(\"\");\r\n  const ref = useRef(\"\");\r\n  const db = firebase.firestore().collection(\"test\");\r\n\r\n  const test = async (preview) => {\r\n    // 保存先のドキュメントの取得\r\n    const userRef = await db.doc();\r\n\r\n    // blobに変換\r\n    const blob = preview;\r\n    const img = { img: blob };\r\n\r\n    // firestoreに保存\r\n    await userRef\r\n      .set(img, { merge: true })\r\n      .catch((error) => console.log(error));\r\n\r\n    // 下記は保存したデータの取得\r\n    //独立している\r\n    const userSnapshot = await userRef.get();\r\n    const getBlobData = userSnapshot.data()[\"img\"];\r\n    setPreview(getBlobData);\r\n    // console.log(getBlobData);\r\n  };\r\n\r\n  const onCrop = (defaultPreview) => {\r\n    setPreview(defaultPreview);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setPreview(\"\");\r\n  };\r\n\r\n  const onBeforeFileLoad = (e) => {\r\n    const image = URL.createObjectURL(e.target.files[0]);\r\n  };\r\n\r\n  const onSelectPic = () => {\r\n    test(preview);\r\n    // if (setUserImage) {\r\n    //   console.log(\"True\");\r\n    //   setPreview();\r\n    //   console.log(userImage);\r\n    // } else {\r\n    //   console.log(\"False\");\r\n    // }\r\n    getData(false, preview);\r\n  };\r\n\r\n  const onCancelSelect = () => {\r\n    getData(false, \"\");\r\n  };\r\n\r\n  // console.log(preview);\r\n  return (\r\n    <div className=\"container\">\r\n      {/* <div>\r\n        <img src={userImage} />\r\n      </div> */}\r\n      <div className=\"row mx-auto my-3\">\r\n        <div className=\"col-md-6 m-auto\">\r\n          <div\r\n            className=\"mx-auto my-4 choose-file\"\r\n            // style={{ overflow: \"scroll\" }}\r\n          >\r\n            <Avatar\r\n              ref={ref}\r\n              img={image}\r\n              imageWidth={270}\r\n              width={\"100%\"}\r\n              height={180}\r\n              onCrop={onCrop}\r\n              onClose={onClose}\r\n              onBeforeFileLoad={onBeforeFileLoad}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 m-auto\">\r\n          <div className=\"previewDiv rounded-circle m-auto\">\r\n            {preview && (\r\n              <img\r\n                alt=\"preview\"\r\n                src={preview}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                className=\"rounded-circle\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary btn-md float-left ml-2 mb-3 text-center\"\r\n            style={{ minWidth: \"100px\" }}\r\n            onClick={onCancelSelect}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <button\r\n            type=\"button\"\r\n            // onFileLoad={onFileLoad}\r\n            className=\"btn btn-success btn-md float-right mr-2 mb-3 text-center\"\r\n            onClick={onSelectPic}\r\n            disabled={!preview}\r\n            style={{ minWidth: \"100px\" }}\r\n            // onChange={handleScale}\r\n          >\r\n            Ok\r\n          </button>\r\n          {/* onFileLoad={onFileLoad} */}\r\n          {/* <input type=\"file\" onChange={handleImage} /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAvatar;\r\n","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\ProfilePhoto.js",["36"],"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\firebase\\firebase.js",[],{"ruleId":"37","severity":1,"message":"38","line":13,"column":6,"nodeType":"39","endLine":13,"endColumn":8,"suggestions":"40"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":10,"nodeType":"43","messageId":"44","endLine":13,"endColumn":17},{"ruleId":"41","severity":1,"message":"45","line":13,"column":19,"nodeType":"43","messageId":"44","endLine":13,"endColumn":29},{"ruleId":"46","severity":1,"message":"47","line":23,"column":31,"nodeType":"48","messageId":"49","endLine":23,"endColumn":33},{"ruleId":"37","severity":1,"message":"50","line":33,"column":6,"nodeType":"39","endLine":33,"endColumn":8,"suggestions":"51"},{"ruleId":"41","severity":1,"message":"52","line":1,"column":10,"nodeType":"43","messageId":"44","endLine":1,"endColumn":15},{"ruleId":"41","severity":1,"message":"53","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":20},{"ruleId":"41","severity":1,"message":"54","line":9,"column":17,"nodeType":"43","messageId":"44","endLine":9,"endColumn":25},{"ruleId":"41","severity":1,"message":"55","line":10,"column":10,"nodeType":"43","messageId":"44","endLine":10,"endColumn":19},{"ruleId":"41","severity":1,"message":"56","line":10,"column":21,"nodeType":"43","messageId":"44","endLine":10,"endColumn":33},{"ruleId":"41","severity":1,"message":"57","line":44,"column":11,"nodeType":"43","messageId":"44","endLine":44,"endColumn":16},{"ruleId":"41","severity":1,"message":"58","line":4,"column":8,"nodeType":"43","messageId":"44","endLine":4,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'portal' and 'portalRoot'. Either include them or remove the dependency array.","ArrayExpression",["59"],"no-unused-vars","'getBlob' is assigned a value but never used.","Identifier","unusedVar","'setGetBlob' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'db' and 'imageSrc'. Either include them or remove the dependency array.",["60"],"'parse' is defined but never used.","'AvatarEditor' is defined but never used.","'setImage' is assigned a value but never used.","'userImage' is assigned a value but never used.","'setUserImage' is assigned a value but never used.","'image' is assigned a value but never used.","'Avatar' is defined but never used.",{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},"Update the dependencies array to be: [portal, portalRoot]",{"range":"65","text":"66"},"Update the dependencies array to be: [db, imageSrc]",{"range":"67","text":"68"},[404,406],"[portal, portalRoot]",[992,994],"[db, imageSrc]"]