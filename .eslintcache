[{"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\Portal.js":"1","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\index.js":"2","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\CreateAvatar.js":"3","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\ProfilePhoto.js":"4","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\firebase\\firebase.js":"5"},{"size":607,"mtime":1605514531514,"results":"6","hashOfConfig":"7"},{"size":1020,"mtime":1606828359641,"results":"8","hashOfConfig":"7"},{"size":4120,"mtime":1606834802060,"results":"9","hashOfConfig":"7"},{"size":1448,"mtime":1606562349255,"results":"10","hashOfConfig":"7"},{"size":663,"mtime":1606829245643,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"pkwoak",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\Portal.js",["25"],"import { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport PropTypes from \"prop-types\";\n\nconst Portal = ({ portalDiv, children }) => {\n  const [portal] = useState(document.createElement(\"div\"));\n  const portalRoot = document.getElementById(portalDiv);\n  useEffect(() => {\n    portalRoot.appendChild(portal);\n    return () => {\n      portalRoot.removeChild(portal);\n    };\n  }, []);\n\n  return ReactDOM.createPortal(children, portal);\n};\n\nPortal.propTypes = {\n  portalDiv: PropTypes.string.isRequired,\n  children: PropTypes.instanceOf(Object).isRequired,\n};\n\nexport default Portal;\n","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\index.js",[],"C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\CreateAvatar.js",["26","27","28","29","30","31","32","33","34"],"import { parse } from \"@fortawesome/fontawesome-svg-core\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport Avatar from \"react-avatar-edit\";\r\nimport AvatarEditor from \"react-avatar-editor\";\r\nimport firebase from \"../firebase/firebase\";\r\n\r\nconst CreateAvatar = ({ getData }) => {\r\n  const [preview, setPreview] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [userImage, setUserImage] = useState(\"\");\r\n  const [imageUrl, setImageUrl] = useState(\"\");\r\n  const fs = require(\"fs\");\r\n  const ref = useRef(\"\");\r\n  const db = firebase.firestore().collection(\"test\");\r\n\r\n  let icon;\r\n  const test = async (preview) => {\r\n    // 保存先のドキュメントの取得\r\n    const userRef = await db.doc();\r\n\r\n    // 保存する画像の読み込み\r\n    // icon = fs.readFileSync(\"mitsuhiko.png\");\r\n\r\n    // blobに変換\r\n    const blob = preview;\r\n    const img = { img: blob };\r\n\r\n    // firestoreに保存\r\n    await userRef\r\n      .set(img, { merge: true })\r\n      .catch((error) => console.log(error));\r\n\r\n    // 下記は保存したデータの取得\r\n    //独立している\r\n    const userSnapshot = await userRef.get();\r\n    const userImg = userSnapshot.data()[\"img\"];\r\n    setImage(userImg);\r\n    console.log(userImg);\r\n  };\r\n\r\n  const onCrop = (defaultPreview) => {\r\n    setPreview(defaultPreview);\r\n  };\r\n\r\n  const onClose = () => {\r\n    setPreview(\"\");\r\n  };\r\n\r\n  const onBeforeFileLoad = (e) => {\r\n    const image = URL.createObjectURL(e.target.files[0]);\r\n  };\r\n\r\n  const onSelectPic = () => {\r\n    getData(false, preview);\r\n    test(preview);\r\n    //   storage\r\n    //     .ref(`images/${image.name}`)\r\n    //     .put(image)\r\n    //     .on(\r\n    //       \"state_changed\",\r\n    //       (snapshot) => {},\r\n    //       (error) => {\r\n    //         console.log(error);\r\n    //       },\r\n    //       () => {\r\n    //         storage\r\n    //           .ref(\"images\")\r\n    //           .child(image.name)\r\n    //           .getDownloadURL()\r\n    //           .then((url) => {});\r\n    //       }\r\n    //     );\r\n  };\r\n\r\n  const onCancelSelect = () => {\r\n    getData(false, \"\");\r\n  };\r\n\r\n  return (\r\n    \r\n    <div className=\"container\">\r\n       <div>\r\n          <img src={userImage} />\r\n        </div>\r\n      <div className=\"row mx-auto my-3\">\r\n        <div className=\"col-md-6 m-auto\">\r\n          <div\r\n            className=\"mx-auto my-4 choose-file\"\r\n            // style={{ overflow: \"scroll\" }}\r\n          >\r\n            <Avatar\r\n              ref={ref}\r\n              img={image}\r\n              imageWidth={270}\r\n              width={\"100%\"}\r\n              height={180}\r\n              onCrop={onCrop}\r\n              onClose={onClose}\r\n              onBeforeFileLoad={onBeforeFileLoad}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-6 m-auto\">\r\n          <div className=\"previewDiv rounded-circle m-auto\">\r\n            {preview && (\r\n              <img\r\n                alt=\"preview\"\r\n                src={image}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                className=\"rounded-circle\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-secondary btn-md float-left ml-2 mb-3 text-center\"\r\n            style={{ minWidth: \"100px\" }}\r\n            onClick={onCancelSelect}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n        <div className=\"col-6\">\r\n          <button\r\n            type=\"button\"\r\n            // onFileLoad={onFileLoad}\r\n            className=\"btn btn-success btn-md float-right mr-2 mb-3 text-center\"\r\n            onClick={onSelectPic}\r\n            disabled={!preview}\r\n            style={{ minWidth: \"100px\" }}\r\n            // onChange={handleScale}\r\n          >\r\n            Ok\r\n          </button>\r\n          {/* onFileLoad={onFileLoad} */}\r\n          {/* <input type=\"file\" onChange={handleImage} /> */}\r\n        </div>\r\n       \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateAvatar;\r\n","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\components\\ProfilePhoto.js",["35"],"import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Avatar from \"react-avatar-edit\";\r\n\r\nconst ProfilePhoto = ({ getData, imageSrc }) => {\r\n  const [toggle, setToggle] = useState(false);\r\n\r\n  const handleToggleClick = () => {\r\n    setToggle(true);\r\n    getData(true, imageSrc);\r\n  };\r\n\r\n  const deletePic = () => {\r\n    setToggle(false);\r\n    getData(false, \"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <button\r\n        type=\"button\"\r\n        onClick={handleToggleClick}\r\n        className=\"btn btn-primary rounded-circle mt-2 opaque profile-pic\"\r\n        disabled={toggle && imageSrc}\r\n      >\r\n        {(!toggle || !imageSrc) && (\r\n          <FontAwesomeIcon icon={faUserAlt} color=\"white\" size=\"3x\" />\r\n        )}\r\n        {toggle && imageSrc && (\r\n          <img\r\n            alt=\"profile\"\r\n            src={imageSrc}\r\n            className=\"rounded-circle\"\r\n            width=\"100%\"\r\n          />\r\n        )}\r\n      </button>\r\n      {toggle && imageSrc && (\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-danger rounded-circle position-relative delete-button\"\r\n          onClick={deletePic}\r\n        >\r\n          <FontAwesomeIcon icon={faTrashAlt} color=\"white\" size=\"xs\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePhoto;\r\n","C:\\Users\\rs102\\Desktop\\icon-test-db\\src\\firebase\\firebase.js",[],{"ruleId":"36","severity":1,"message":"37","line":13,"column":6,"nodeType":"38","endLine":13,"endColumn":8,"suggestions":"39"},{"ruleId":"40","severity":1,"message":"41","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":15},{"ruleId":"40","severity":1,"message":"44","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":20},{"ruleId":"40","severity":1,"message":"45","line":10,"column":21,"nodeType":"42","messageId":"43","endLine":10,"endColumn":33},{"ruleId":"40","severity":1,"message":"46","line":11,"column":10,"nodeType":"42","messageId":"43","endLine":11,"endColumn":18},{"ruleId":"40","severity":1,"message":"47","line":11,"column":20,"nodeType":"42","messageId":"43","endLine":11,"endColumn":31},{"ruleId":"40","severity":1,"message":"48","line":12,"column":9,"nodeType":"42","messageId":"43","endLine":12,"endColumn":11},{"ruleId":"40","severity":1,"message":"49","line":16,"column":7,"nodeType":"42","messageId":"43","endLine":16,"endColumn":11},{"ruleId":"40","severity":1,"message":"50","line":50,"column":11,"nodeType":"42","messageId":"43","endLine":50,"endColumn":16},{"ruleId":"51","severity":1,"message":"52","line":83,"column":11,"nodeType":"53","endLine":83,"endColumn":34},{"ruleId":"40","severity":1,"message":"54","line":4,"column":8,"nodeType":"42","messageId":"43","endLine":4,"endColumn":14},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'portal' and 'portalRoot'. Either include them or remove the dependency array.","ArrayExpression",["55"],"no-unused-vars","'parse' is defined but never used.","Identifier","unusedVar","'AvatarEditor' is defined but never used.","'setUserImage' is assigned a value but never used.","'imageUrl' is assigned a value but never used.","'setImageUrl' is assigned a value but never used.","'fs' is assigned a value but never used.","'icon' is defined but never used.","'image' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Avatar' is defined but never used.",{"desc":"56","fix":"57"},"Update the dependencies array to be: [portal, portalRoot]",{"range":"58","text":"59"},[404,406],"[portal, portalRoot]"]